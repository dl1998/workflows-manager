name: Publish Documentation
on:
  workflow_dispatch:
    inputs:
      force_update:
        type: boolean
        description: "Force update even if version exists"
        default: false
  release:
    types: [published]
permissions:
  contents: write
jobs:
  docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Install libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz jq curl
      - name: Download Latest PlantUML
        run: |
          PLANTUML_URL=$(curl -s https://api.github.com/repos/plantuml/plantuml/releases/latest | jq -r '.assets[] | select(.name == "plantuml.jar") | .browser_download_url')
          if [ -z "$PLANTUML_URL" ]; then
            echo "Failed to retrieve PlantUML jar file URL."
            exit 1
          fi
          curl -L "$PLANTUML_URL" -o /usr/local/bin/plantuml.jar
          echo -e '#!/bin/bash\njava -jar /usr/local/bin/plantuml.jar "$@"' | sudo tee /usr/local/bin/plantuml > /dev/null
          sudo chmod +x /usr/local/bin/plantuml
          export PATH="/usr/local/bin:$PATH"
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install Hatch
        run: python3 -m pip install hatch
      - name: Retrieve version
        id: get_version
        run: echo "WORKFLOWS_VERSION=$(hatch version)" >> "$GITHUB_ENV"
      - name: Check if documentation version exists
        id: check_docs
        run: |
          FORCE_UPDATE=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.force_update == 'true' }}
          VERSION_URL="https://dl1998.github.io/workflows-manager/${{ env.WORKFLOWS_VERSION }}/"
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}" "$VERSION_URL")
          if [ "$HTTP_STATUS" -eq 200 ] && [ "$FORCE_UPDATE" != "true" ]; then
            echo "Documentation version ${{ env.WORKFLOWS_VERSION }} already exists and force update is not enabled."
            exit 1
          fi
      - name: Set User
        run: |
            git config --local user.name "GitHub Actions"
            git config --local user.email "action@github.com"
      - name: Publish documentation
        run: |
          git fetch origin gh-pages --depth=1
          hatch env run -e docs -- mike deploy --update-aliases --push ${{ env.WORKFLOWS_VERSION }} latest
      - name: Update default version
        run: hatch env run -e docs -- mike set-default --push ${{ env.WORKFLOWS_VERSION }}
