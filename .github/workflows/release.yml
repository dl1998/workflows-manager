name: Release New Version
on:
  release:
    types: [published]
env:
  REPOSITORY_NAME: workflows-manager
jobs:
  create-release:
    name: Create a new release
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Hatch
        run: python3 -m pip install hatch
      - name: Setup environment
        run: hatch build
      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-dist
          path: dist/

  publish-library-dev:
    name: Publish new release on dev
    needs: ['create-release']
    permissions: write-all
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: "https://test.pypi.org/project/${{ env.REPOSITORY_NAME }}/"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-dist
          path: dist/
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: "https://test.pypi.org/legacy/"

  publish-library-prod:
    name: Publish new release on prod
    needs: ['create-release', 'publish-library-dev']
    permissions: write-all
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: "https://pypi.org/project/${{ env.REPOSITORY_NAME }}/"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-dist
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  build-and-push-docker:
    name: Build and Push Docker Image
    needs: ['create-release']
    runs-on: ubuntu-latest
    permissions: write-all
    environment:
      name: docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Hatch
        run: python3 -m pip install hatch
      - name: Get Version from Hatch
        id: get_version
        run: |
          VERSION=$(hatch version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ github.repository }}:${{ env.VERSION }}
            ${{ github.repository }}:latest
          platforms: linux/amd64,linux/arm64