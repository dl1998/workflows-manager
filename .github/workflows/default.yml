name: Perform Checks
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REPOSITORY_NAME: 'workflows-manager'
  THRESHOLD: 0.9
permissions: write-all

jobs:
  standard-checks:
    name: Perform Standard Checks
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Hatch
        run: python3 -m pip install hatch
      - name: Setup environment
        run: hatch env +py ${{ matrix.python-version }} create test
      - name: Run Pylint
        uses: dciborow/action-pylint@0.1.0
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          level: warning
          glob_pattern: "src/**/*.py"
      - name: Unit Tests
        run: hatch run +py=${{ matrix.python-version }} test:unit-tests
      - name: Generate XML coverage report
        run: hatch run +py=${{ matrix.python-version }} test:coverage xml
      - name: Get Coverage
        uses: orgoro/coverage@v3.1
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          thresholdAll: ${{ env.THRESHOLD }}
      - name: Retrieve Coverage and Version
        id: info
        run: |
          echo "TOTAL_COVERAGE=$(hatch run +py=${{ matrix.python-version }} test:coverage report | grep TOTAL | awk '{ print $4 }' | sed 's/%//g')" >> "$GITHUB_ENV"
          echo "VERSION=$(hatch version)" >> "$GITHUB_ENV"
        shell: bash

  add-badges:
    name: Add Badges
    runs-on: ubuntu-latest
    needs: standard-checks
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Determine Coverage Color
        id: coverage-color
        run: |
          if (( $(echo "${{ env.TOTAL_COVERAGE }} < ${{ env.THRESHOLD }} * 100" | bc -l) )); then
            echo "color=red" >> "$GITHUB_ENV"
          else
            echo "color=green" >> "$GITHUB_ENV"
          fi
      - name: Add Badges
        uses: wow-actions/add-badges@v1.1.0
        env:
          repo_url: ${{ github.event.repository.html_url }}
          repo_name: ${{ github.event.repository.name }}
          repo_owner: ${{ github.event.repository.owner.login }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          badges: |
            [
              {
                "badge": "https://img.shields.io/badge/License-MIT-yellow.svg?style=for-the-badge",
                "alt": "MIT License",
                "link": "${{ env.repo_url }}/blob/main/LICENSE"
              },
              {
                "badge": "https://img.shields.io/badge/Language-Python-blue?style=for-the-badge&logo=python",
                "alt": "Language",
                "link": "https://www.python.org/"
              },
              {
                "badge": "https://img.shields.io/badge/PRs-Welcome-brightgreen.svg?style=for-the-badge",
                "alt": "PRs Welcome",
                "link": "${{ env.repo_url }}/pulls"
              },
              {
                "badge": "https://img.shields.io/badge/TestPyPi-${{ env.VERSION }}-brightgreen.svg?style=for-the-badge",
                "alt": "TestPyPi ${{ env.VERSION }}",
                "link": "https://test.pypi.org/project/${{ env.REPOSITORY_NAME }}/"
              },
              {
                "badge": "https://img.shields.io/badge/PyPi-${{ env.VERSION }}-brightgreen.svg?style=for-the-badge",
                "alt": "PyPi ${{ env.VERSION }}",
                "link": "https://pypi.org/project/${{ env.REPOSITORY_NAME }}/"
              },
              {
                "badge": "https://img.shields.io/badge/Coverage-${{ env.TOTAL_COVERAGE }}%25-${{ env.color }}.svg?style=for-the-badge",
                "alt": "Coverage ${{ env.TOTAL_COVERAGE }}%"
              }
            ]
          path: README.md
          center: false
